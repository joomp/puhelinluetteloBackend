{"version":3,"sources":["components/PersonForm.js","components/Filter.js","services/contacts.js","components/Contacts.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","newName","setNewName","newNum","setNewNum","addName","onSubmit","value","onChange","event","target","type","Filter","filterer","setFilter","baseUrl","axios","get","then","response","data","id","newObject","put","post","delete","Contact","persons","setPersons","person","error","notification","name","number","onClick","message","window","confirm","contactService","resp","filter","p","catch","e","Contacts","contacts","map","key","Notification","className","App","useState","setNotification","setError","useEffect","showNotification","msg","setTimeout","newContact","preventDefault","some","find","res","console","log","concat","regexp","RegExp","test","contactsToShow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f674e8ac.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({newName, setNewName, newNum, setNewNum, addName}) => {\r\n\r\n    const handleNameChange = (event) =>{\r\n      setNewName(event.target.value)\r\n    }\r\n  \r\n    const handleNumChange = (event) =>{\r\n      setNewNum(event.target.value)\r\n    }\r\n  \r\n    return(\r\n    <form onSubmit = {addName}>\r\n      <div>\r\n        Name: <input value = {newName} onChange = {handleNameChange}/>\r\n      </div>\r\n      <div>\r\n        Number: <input value = {newNum} onChange = {handleNumChange}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({filterer, setFilter}) => {\r\n    const handleFiltererChange = (event) =>{\r\n      setFilter(event.target.value)\r\n    }\r\n  \r\n    return (\r\n      <form>\r\n        <div>\r\n          Search: <input value = {filterer} onChange = {handleFiltererChange}/>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, update, create, remove}","import React from 'react'\r\nimport contactService from '../services/contacts'\r\n\r\nconst Contacts = ({contacts, persons, setPersons, error, notification}) => {\r\n    return (\r\n      <ul>\r\n        {contacts.map((person) => {\r\n          return <Contact key = {person.name + person.number} person = {person} persons = {persons} setPersons = {setPersons}\r\n          notification = {notification} error = {error}/>\r\n        })}\r\n      </ul>\r\n    )\r\n}\r\n\r\nconst Contact = ({persons, setPersons, person, error, notification}) => {\r\n    const onclick = () => {\r\n        const message = `Are you sure you want to remove ${person.name} from your contacts? (ID: ${person.id})`\r\n        const result = window.confirm(message)\r\n        if (result){\r\n            contactService.remove(person.id)\r\n            .then( resp => {\r\n                notification(`${person.name} was deleted succesfully`)\r\n                setPersons(persons.filter(p => p.name !== person.name))\r\n                })\r\n            .catch(e => {\r\n                error(`Error! ${person.name} was already deleted from the server`)\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <li > \r\n            {`${person.name}, ${person.number}`}\r\n            <button onClick = {onclick}> Delete Contact </button>\r\n        </li>)\r\n}\r\n\r\nexport default Contacts","import React from 'react'\r\nimport '../index.css'\r\n\r\nconst Notification = ({ message, className}) => {\r\n\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport Contacts from './components/Contacts'\r\nimport contactService from './services/contacts'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons] = useState([]) \r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNum, setNewNum ] = useState('')\r\n    const [notification, setNotification] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [ filterer, setFilter ] = useState('')\r\n  \r\n    useEffect( () => {\r\n        contactService.getAll()\r\n        .then( response => {\r\n            setPersons(response)\r\n        })\r\n    }, [])\r\n  \r\n    const addName = (event) => {\r\n        const newContact = {\r\n            name: newName,\r\n            number: newNum\r\n        }\r\n\r\n        event.preventDefault()\r\n        if( persons.some(person => person.name === newName) ){\r\n            const person = persons.find(p => p.name === newContact.name)\r\n            const message = `${newName} is already in phonebook. Do you want to update their information?`\r\n            const result = window.confirm(message)\r\n            if (!result){\r\n                return\r\n            }\r\n            contactService.update(person.id, newContact).then(res => {\r\n                setPersons(persons.map(p => p.name === newContact.name ? res : p))\r\n            })\r\n            setNewName('')\r\n            setNewNum('')\r\n            showNotification(`${newContact.name}'s number was changed succesfully`)\r\n            return\r\n        } \r\n        contactService.create(newContact).then(res => {\r\n            console.log(res)\r\n            setNewName('')\r\n            setNewNum('')\r\n            setPersons(persons.concat(res))\r\n            showNotification(`${newContact.name} was added succesfully`)\r\n        })\r\n    } \r\n\r\n    const showNotification = msg => {\r\n        setNotification(msg)\r\n        setTimeout(() => {\r\n            setNotification(null)\r\n        }, 4000)\r\n    }\r\n\r\n    const showError = msg => {\r\n        setError(msg)\r\n        setTimeout(() => {\r\n            setError(null)\r\n        }, 4000)\r\n    }\r\n  \r\n    const contactsToShow = () => {\r\n        let regexp = new RegExp(filterer, \"i\");\r\n        return persons.filter(person => regexp.test(person.name))\r\n    }\r\n    return (\r\n      <div>\r\n        <Notification message = {notification} className = \"notification\"/>\r\n        <Notification message = {error} className = \"error\"/>\r\n        <h2>Phonebook</h2>\r\n        <h3>Filter contacts</h3>\r\n        <Filter filterer = {filterer} setFilter = {setFilter}/>\r\n        <h3>Add new contact</h3>\r\n        <PersonForm newName = {newName} setNewName = {setNewName} newNum = {newNum} \r\n         setNewNum = {setNewNum} addName = {addName}/>\r\n        <h2>Numbers</h2>\r\n        <Contacts persons = {persons} setPersons = {setPersons} contacts = {contactsToShow()} notification = {showNotification}\r\n            error = {showError}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}